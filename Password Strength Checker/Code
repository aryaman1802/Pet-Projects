import tkinter as tk
import numpy as np

# Top level window
frame = tk.Tk()
frame.title("Strong Password Detection")
frame.geometry('500x500')


def check_password(pwd):
    """Function to check the strength of the password.
       Returns low, medium, strong, next level"""
    import re
    
    flag1, flag2, flag3, flag4, flag5 = False, False, False, False, False
    
    # condition 1: must be at least 8 characters long
    if len(pwd) >= 8:
        flag1 = True
    
    # condition 2: contains both uppercase and lowercase letters
    low_case = re.compile(r'([a-z])+')
    upp_case = re.compile(r'([A-Z])+')
    if (low_case.search(pwd) != None) and (upp_case.search(pwd) != None):
        flag2 = True
    
    # condition 3: contains at least 1 digit
    dig = re.compile(r'([0-9])+')
    if dig.search(pwd) != None:
        flag3 = True
        
    # condition 4: contains special characters
    spch = re.compile(r'([~`! @#$%^&*=+_|;<>,./?()\\])+')   # list of special characters on keyboard
    # you do not need to escape the special regex characters with a preceding backslash inside square brackets except \
    if spch.search(pwd) != None:
        flag4 = True
    
    # condition 5: length is greater than 20
    if len(pwd) >= 20:
        flag5 = True
    
    
    if (flag1 + flag2 + flag3 + flag4 + flag5) == 5:
        return "Next Level"
    elif (flag1 + flag2 + flag3 + flag4 + flag5) == 4:
        return "Very Strong"    
    elif (flag1 + flag2 + flag3 + flag4 + flag5) == 3:
        return "Strong"
    elif (flag1 + flag2 + flag3 + flag4 + flag5) == 2:
        return "Medium"
    elif (flag1 + flag2 + flag3 + flag4 + flag5) == 1:
        return "Weak"


def printInput():
    """Function for getting input from textbox and printing it at label widget"""
    inp = inputtxt.get(1.0, "end-1c")
    pwdstrng = check_password(inp)
    lbl.config(text = "Password Strength: "+pwdstrng)


def gen_uppc_lowc_in_str():
    """Converts the alphabets' cases to uppercase and lowercase randomly to make the
    password more secure."""
    s = str(inputtxt.get(1.0, "end-1c"))
    assert type(s) == str, "data type of s is not str"
    data = list(s)
    # np.random.seed(42)
    l = len(s)
    uppc_ind = np.unique(np.random.choice(np.arange(l), size=l//2))
    lowc_ind = np.array([i for i in np.arange(l) if i not in uppc_ind])
    for i in range(l):
        if i in uppc_ind and data[i].isalpha():
            data[i] = data[i].upper()
        elif i in lowc_ind and data[i].isalpha():
            data[i] = data[i].lower()
    more_secure_s = ''.join(data)
    lbl.config(text = "More secure password (hopefully!): "+more_secure_s)
    


# TextBox Creation
inputtxt = tk.Text(frame, height=5, width=20)
inputtxt.pack()

# Print button Creation
printButton = tk.Button(frame, text="Print", command=printInput)
printButton.pack()

# Label Creation
lbl = tk.Label(frame, text = "")
lbl.pack()

# More Secure Password button Creation
mspButton = tk.Button(frame, text="More Secure Password", command=gen_uppc_lowc_in_str)
mspButton.pack()

# Label2 Creation
lbl2 = tk.Label(frame, text = "")
lbl2.pack()


# Exit button creation
exitButton = tk.Button(frame, text="Quit", command=frame.destroy)
exitButton.pack()

# run the tkinter event loop
frame.mainloop()
